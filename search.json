[{"path":"https://metropolitan-council.github.io/streetlightR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to streetlightR","title":"Contributing to streetlightR","text":"project uses feature-branch naming convention workflow. highly suggest take time set commit signing GPG. main main branch. Base work main. Contribute project making changes feature branch issuing pull-requests ’re ready integrate main branch: Pull main branch; git pull, necessary git checkout main switch main can use initials prefix feature branch, e.g., aa-bug-fix-1. create new function, create new custom variable, fix issue - please name branch issue number Commit changes related feature push GitHub. can push changes feature branch time. ’re ready work reviewed create pull-request GitHub. can issue pull-request request review work--progress want guidance code content. New commits pushed branch update pull-request. remove deleted feature branches local repository run git remote prune origin. attempt push additional commits merged pull-request. Instead, start new feature branch issue new pull request. Remember update branch main whenever start new feature, e.g., git checkout main; git pull origin main; git checkout -b -new-feature.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Metropolitan Council Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/articles/api_zaa.html","id":"create-and-upload-an-example-polygon","dir":"Articles","previous_headings":"","what":"Create and upload an example polygon","title":"Using streetlightR for a Zone Activity Analysis","text":"","code":"example_polygon <- sf::st_sfc(   sf::st_point(cbind(-93.09, 44.95)),   crs = 4326 ) %>%   sf::st_buffer(500)  name <- paste0(\"example_polygon_\", Sys.time())  upload_zone_set(   login_email = your_email,   geom_type = \"polygon\",   zones = example_polygon,   zone_set_name = name )"},{"path":"https://metropolitan-council.github.io/streetlightR/articles/api_zaa.html","id":"create-a-streetlight-analysis","dir":"Articles","previous_headings":"","what":"Create a streetlight analysis","title":"Using streetlightR for a Zone Activity Analysis","text":"","code":"create_streetlight_analysis(   login_email = your_email,   analysis_type = \"Zone_Activity_Analysis\",   analysis_name = \"{your_name}\",   travel_mode_type = \"All_Vehicles\",   output_type = \"Volume\",   origin_zone_set = name,   date_ranges = list(     start_date = \"05/01/2021\",     end_date = \"08/31/2021\"   ),   tags = list(\"streetlightR\"),   traveler_attributes = FALSE,   trip_attributes = FALSE )"},{"path":"https://metropolitan-council.github.io/streetlightR/articles/api_zaa.html","id":"check-status-and-download-results","dir":"Articles","previous_headings":"","what":"Check status and download results","title":"Using streetlightR for a Zone Activity Analysis","text":"","code":"check_analysis_status(   analysis_name = name, )  results <- get_analysis_data(   analysis_name = name,   metric = \"za_all\" )  results"},{"path":"https://metropolitan-council.github.io/streetlightR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Metropolitan Council. Copyright holder. Liz Roten. Maintainer, author. Raven McKnight. Author. Ellen Esch. Author.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roten L, McKnight R, Esch E (2022). streetlightR: Interact StreetLight Data's API R. R package version 1.1.0, https://metropolitan-council.github.io/streetlightR/.","code":"@Manual{,   title = {streetlightR: Interact with StreetLight Data's API in R},   author = {Liz Roten and Raven McKnight and Ellen Esch},   year = {2022},   note = {R package version 1.1.0},   url = {https://metropolitan-council.github.io/streetlightR/}, }"},{"path":"https://metropolitan-council.github.io/streetlightR/index.html","id":"streetlightr","dir":"","previous_headings":"","what":"Interact with StreetLight Data's API in R","title":"Interact with StreetLight Data's API in R","text":"streetlightR R wrapper StreetLight Data’s InSight® API makes easier users create analyses, upload zone sets, fetch results, . get sense can package, see presentation StreetLight API users group November 2022.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interact with StreetLight Data's API in R","text":"","code":"remotes::install_github(\"Metropolitan-Council/streetlightR\")"},{"path":"https://metropolitan-council.github.io/streetlightR/index.html","id":"streetlight-api","dir":"","previous_headings":"","what":"StreetLight API","title":"Interact with StreetLight Data's API in R","text":"StreetLight Data offers limited-feature API subscribers. Contact StreetLight support request API key documentation access.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/index.html","id":"api-key-management","dir":"","previous_headings":"StreetLight API","what":"API key management","title":"Interact with StreetLight Data's API in R","text":"Contact StreetLight Data support request API key. , use streetlight_api_key() save key future use.","code":"library(streetlightR) streetlight_api_key(key = \"9999999\", install = TRUE)"},{"path":"https://metropolitan-council.github.io/streetlightR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Interact with StreetLight Data's API in R","text":"welcome contributions! Please review CONTRIBUTING guide making contribution. Thanks everyone contributed one way another: @ehesch, @ravenmcknight, @eroten.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/index.html","id":"notes","dir":"","previous_headings":"","what":"Notes","title":"Interact with StreetLight Data's API in R","text":"package affiliated maintained StreetLight Data. package tool StreetLight API users authored StreetLight API users.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/pull_request_template.html","id":null,"dir":"","previous_headings":"","what":"Description","title":"Description","text":"Please include summary change issue fixed. Fixes # (issue)","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/pull_request_template.html","id":"type-of-change","dir":"","previous_headings":"","what":"Type of change","title":"Description","text":"Please delete options relevant. Bug fix New feature","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/pull_request_template.html","id":"package-development-checklist","dir":"","previous_headings":"","what":"Package development checklist","title":"Description","text":"usethis::use_latest_dependencies() usethis::use_tidy_description() devtools::test() devtools::document(roclets = c('rd', 'collate', 'namespace')) Update DESCRIPTION new contributors, neccessary. Double check documentation styler:::style_active_pkg() fix errors fix simple warnings notes","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/pull_request_template.html","id":"courtesy-checklist","dir":"","previous_headings":"","what":"Courtesy checklist","title":"Description","text":"code follows style guidelines project performed self-review code commented code, particularly hard--understand areas made corresponding changes documentation added tests prove fix effective feature works tagged PR appropriatley","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_analysis_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the status of a analysis in the StreetLight API. — check_analysis_status","title":"Check the status of a analysis in the StreetLight API. — check_analysis_status","text":"Check status analysis StreetLight API.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_analysis_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the status of a analysis in the StreetLight API. — check_analysis_status","text":"","code":"check_analysis_status(analysis_name = NULL, key = NULL, analysis_name_ = NULL)"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_analysis_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the status of a analysis in the StreetLight API. — check_analysis_status","text":"analysis_name character, analysis name key character, StreetLight API key. Default NULL. analysis_name_ Deprecated, use analysis_name parameter.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_analysis_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the status of a analysis in the StreetLight API. — check_analysis_status","text":"parsed response analysis availability, metrics, name, UUID","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_api_key_access.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API key existence — check_api_key_access","title":"Check API key existence — check_api_key_access","text":"Check API key existence","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_api_key_access.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API key existence — check_api_key_access","text":"","code":"check_api_key_access(key = NULL)"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_api_key_access.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API key existence — check_api_key_access","text":"key character, StreetLight API key. Default NULL.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_api_key_access.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API key existence — check_api_key_access","text":"API key","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_date_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Check available date ranges for a given travel mode type — check_date_range","title":"Check available date ranges for a given travel mode type — check_date_range","text":"Useful looking recent available data avoid errors analysis creation.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_date_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check available date ranges for a given travel mode type — check_date_range","text":"","code":"check_date_range(key = NULL, travel_mode_type = \"All_Vehicles\", country = \"US\")"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_date_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check available date ranges for a given travel mode type — check_date_range","text":"key character, StreetLight API key. Default NULL. travel_mode_type character, All_Vehicles,  Truck, Bicycle, Pedestrian. Default Vehicles country character, one \"US\" \"CA\". Default \"US\".","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_date_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check available date ranges for a given travel mode type — check_date_range","text":"tibble::tibble columns travel_mode_type, start_date, end_date.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_date_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check available date ranges for a given travel mode type — check_date_range","text":"","code":"if (FALSE) { library(streetlightR) check_date_range() }"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_streetlight_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Test connectivity and authentication to the API server. — check_streetlight_api","title":"Test connectivity and authentication to the API server. — check_streetlight_api","text":"Test connectivity authentication API server.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_streetlight_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test connectivity and authentication to the API server. — check_streetlight_api","text":"","code":"check_streetlight_api(key = NULL)"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_streetlight_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test connectivity and authentication to the API server. — check_streetlight_api","text":"key character, StreetLight API key. Default NULL.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_streetlight_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test connectivity and authentication to the API server. — check_streetlight_api","text":"PASS FAIL message","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_streetlight_api.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Test connectivity and authentication to the API server. — check_streetlight_api","text":"Take care rate limit API. quick checks, 1 second break (Sys.sleep(1)) usually sufficient.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_zone_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that there are under 7,000 zones in a given zone set — check_zone_size","title":"Check that there are under 7,000 zones in a given zone set — check_zone_size","text":"Check 7,000 zones given zone set","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_zone_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that there are under 7,000 zones in a given zone set — check_zone_size","text":"","code":"check_zone_size(zones)"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_zone_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that there are under 7,000 zones in a given zone set — check_zone_size","text":"zones GeoJSON feature collection sf object features either lines polygons columns include \"name\" \"geometry\".","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/check_zone_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that there are under 7,000 zones in a given zone set — check_zone_size","text":"many zones, error.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/create_streetlight_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a StreetLight analysis, which analyzes traffic or activity with respect to the analysis Zones. — create_streetlight_analysis","title":"Create a StreetLight analysis, which analyzes traffic or activity with respect to the analysis Zones. — create_streetlight_analysis","text":"Create StreetLight analysis, analyzes traffic activity respect analysis Zones.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/create_streetlight_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a StreetLight analysis, which analyzes traffic or activity with respect to the analysis Zones. — create_streetlight_analysis","text":"","code":"create_streetlight_analysis(   login_email,   key = NULL,   analysis_type,   analysis_name,   travel_mode_type = \"All_Vehicles\",   output_type = \"index\",   description = \"\",   origin_zone_set,   destination_zone_set = NA,   middle_zone_set = NA,   aadt_zone_set = NA,   calibration_zone_set = NA,   geography_type = \"\",   zone_intersection_type = \"\",   date_ranges = list(start_date = \"01/01/2019\", end_date = \"12/31/2019\"),   day_types = \"All Days|17,Average Weekday|15,Average Weekend Day|67\",   day_parts =     \"All Day|0023,Early AM|0005,Peak AM|0609,Mid-Day|1014,Peak PM|1518,Late PM|1923,Recreation Hours|0819\",   vehicle_weight = \"\",   segment_types = list(),   trip_attributes = FALSE,   traveler_attributes = FALSE,   enable_home_work_locations = FALSE,   hwl_enable_visitor = FALSE,   hwl_enable_resident = FALSE,   hwl_enable_worker = FALSE,   aadt_year = \"\",   aadt_calibration_year = \"\",   tags = \"streetlightR\",   is_ui_enabled = FALSE,   enable_visualization = FALSE,   enable_15min = FALSE,   enable_upsampling = TRUE,   is_massive_queue = FALSE )"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/create_streetlight_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a StreetLight analysis, which analyzes traffic or activity with respect to the analysis Zones. — create_streetlight_analysis","text":"login_email character, StreetLight login email key character, StreetLight API key. Default NULL. analysis_type character, type analysis run. Options OD_Analysis, OD_MF_Analysis, Zone_Activity_Analysis,OD_Preset_Geography, Segment_Analysis, AADT, Top_Routes_OD, Top_Routes_ZA, Traffic_Diagnostics. analysis_name character, analysis name travel_mode_type character, All_Vehicles,  Truck, Bicycle, Pedestrian. Default Vehicles output_type character, One volume, trip_counts, aadt, index, zone_counts. Default index. Traffic Diagnostics, index allowed. description character, Optional analysis description origin_zone_set character, name uploaded zone set use origin origin-destination analysis main zone zone activity analysis destination_zone_set character, name uploaded zone set use destination origin-destination analysis. middle_zone_set character, name uploaded zone set use middle filter origin-destination middle filter analysis. aadt_zone_set character, name uploaded zone set use analysis AADT output. calibration_zone_set character, name uploaded zone set calibration. Required creating Analysis Zone Counts output geography_type character, Required O-D Pre-set Geography analyses. property string one zip, taz, da, blkgrp. zone_intersection_type character, one all_trips_for_zone trips_by_pass_through_setting. Applies Zone Activity Analysis Home Work Locations metrics enabled) r date_ranges list, list date ranges. date range object containing pair MM/DD/YYYY dates, start_date key containing start date range, end_date key containing end date range. start_date end_date inclusive. Default 2019 months. travel_mode_type Bicycle Pedestrian, date range must consist full months. day_types character, comma-separated list day types analysis. day type name separated vertical bar start day week end day week (1 Monday 7 Sunday). Analysis must define Days 17 (Monday Sunday), must define values Average Weekday Average Weekend Day. Default includes Days, Average Weekday, Average Weekend Day. day_parts character,comma-separated list day parts analysis. day part name separated vertical bar start hour end hour 00 (midnight) 23 (11 PM). example, Day|0023 ranges midnight (00:00) 11:59 PM. Analyses must define Day 0023 (midnight midnight). Default includes Day, Recreation Hours (8am-8pm), Park Hours , II, III. vehicle_weight character, one Medium, Heavy, Medium,Heavy null. Whether metric results analysis broken vehicle weight class (medium duty, heavy duty) commercial vehicles. value null, commercial vehicle results broken vehicle weight class. Required creating Top Routes Origins Destinations Analysis Top Routes Zones Analysis. segment_types list, must contain least one Motorway, Trunk, Primary, Secondary, Tertiary, Residential. trip_attributes logical, property controls whether analysis results include add-trip attribute Metrics: trip time distribution, trip length distribution, trip speed distribution, trip circuity distribution. specify , can also customize following properties: - trip_duration_bins -  trip_length_bins - trips_speed_bins - trip_circuity_bins. Default FALSE. traveler_attributes logical, whether analysis results include add-traveler attribute metrics. Traveler attribute metrics include traveler demographics simple trip purpose. (visitor income, education, race, family status) included Metric results. Default FALSE. enable_home_work_locations logical, whether Analysis results include Home Work Locations metrics. TRUE, one hwl_... parameters must TRUE. Default FALSE. hwl_enable_visitor logical, whether Analysis results include visiting trips neither reside work zone. applies Zone Activity Analysis Home Work Locations metrics enabled. hwl_enable_resident logical, whether Analysis results include trips reside zone. applies Zone Activity Analysis Home Work Locations metrics enabled. hwl_enable_worker logical, whether Analysis results include trips work zone. applies Zone Activity Analysis Home Work Locations metrics enabled. aadt_year character, one 2017, 2018, 2019. Required integer creating AADT Analysis. aadt_calibration_year character, one 2017, 2018, 2019. Required integer creating AADT Analysis. tags list, tag names created within Organization associate created Analysis. Default list(\"streetlightR\") is_ui_enabled allows analysis results downloaded visualized though UI well API. used sparingly. enable_visualization logical, whether enable visualization StreetLight platform enable_15min logical, whether Analysis analyze 15-minute day parts. enable_upsampling logical, whether Analysis process upsampling meets necessary thresholds. setting applies analysis enable_15min enabled. is_massive_queue logical, whether Analysis process alongside high volume Analyses order optimize calculation time.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/create_streetlight_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a StreetLight analysis, which analyzes traffic or activity with respect to the analysis Zones. — create_streetlight_analysis","text":"successful, list analysis name, status, universal unique ID (uuid).","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/get_analysis_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Metric result content for an Analysis by Analysis Name — get_analysis_data","title":"Get Metric result content for an Analysis by Analysis Name — get_analysis_data","text":"Get Metric result content Analysis Analysis Name","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/get_analysis_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Metric result content for an Analysis by Analysis Name — get_analysis_data","text":"","code":"get_analysis_data(   analysis_name = NULL,   key = NULL,   metric,   analysis_name_ = NULL )"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/get_analysis_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Metric result content for an Analysis by Analysis Name — get_analysis_data","text":"analysis_name character, analysis name key character, StreetLight API key. Default NULL. metric character, metric fetch. Metric availability dependent analysis type configuration. See create_streetlight_analysis() details. analysis_name_ Deprecated, use analysis_name parameter.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/get_analysis_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Metric result content for an Analysis by Analysis Name — get_analysis_data","text":"tibble requested metric","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlightR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"streetlightR: Interact with StreetLight Data's API in R — streetlightR-package","title":"streetlightR: Interact with StreetLight Data's API in R — streetlightR-package","text":"R wrapper StreetLight Insights API. IMPORTANT: package affiliated maintained StreetLight Data https://www.streetlightdata.com/. package meant solely tool working StreetLight's API.","code":""},{"path":[]},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlightR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"streetlightR: Interact with StreetLight Data's API in R — streetlightR-package","text":"Maintainer: Liz Roten liz.roten@metc.state.mn.us (ORCID) Authors: Raven McKnight raven.mcknight@metc.state.mn.us Ellen Esch ellen.esch@metc.state.mn.us (ORCID) contributors: Metropolitan Council [copyright holder]","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Install a StreetLight API key in your .Renviron for repeated use — streetlight_api_key","title":"Install a StreetLight API key in your .Renviron for repeated use — streetlight_api_key","text":"Install StreetLight API key .Renviron repeated use","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install a StreetLight API key in your .Renviron for repeated use — streetlight_api_key","text":"","code":"streetlight_api_key(key, overwrite = FALSE, install = FALSE)"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install a StreetLight API key in your .Renviron for repeated use — streetlight_api_key","text":"key API key provided StreetLight formated quotes. overwrite logical, set TRUE, overwrite existing STREETLIGHT_API_KEY already .Renviron file. install logical, TRUE, install key .Renviron file use future sessions. Default FALSE.","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_api_key.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Install a StreetLight API key in your .Renviron for repeated use — streetlight_api_key","text":"Adapted tidycensus::census_key","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Install a StreetLight API key in your .Renviron for repeated use — streetlight_api_key","text":"","code":"if (FALSE) { streetlight_key(\"111111abc\", install = TRUE) # First time, reload your environment so you can use the key without restarting R. readRenviron(\"~/.Renviron\") # You can check it with: Sys.getenv(\"STREETLIGHT_API_KEY\") }  if (FALSE) { # If you need to overwrite an existing key: streetlight_key(\"111111abc\", overwrite = TRUE, install = TRUE) # First time, reload your environment so you can use the key without restarting R. readRenviron(\"~/.Renviron\") # You can check it with: Sys.getenv(\"STREETLIGHT_API_KEY\") }"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_insight.html","id":null,"dir":"Reference","previous_headings":"","what":"StreetLight Insights API wrapper — streetlight_insight","title":"StreetLight Insights API wrapper — streetlight_insight","text":"StreetLight Insights API wrapper","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_insight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StreetLight Insights API wrapper — streetlight_insight","text":"","code":"streetlight_insight(key, endpoint)"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_insight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StreetLight Insights API wrapper — streetlight_insight","text":"key character, StreetLight API key. Default NULL. endpoint character, API endpoint. One c(\"analyses/status\",  \"zone_sets\", \"debug/echo\", \"analyses/download/name\")","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/streetlight_insight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StreetLight Insights API wrapper — streetlight_insight","text":"httr2::request path key specifications","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/upload_zone_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload a polygon or line zone set — upload_zone_set","title":"Upload a polygon or line zone set — upload_zone_set","text":"Upload polygon line zone set","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/upload_zone_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload a polygon or line zone set — upload_zone_set","text":"","code":"upload_zone_set(   login_email,   key = NULL,   geom_type = \"polygon\",   zones,   zone_set_name,   zones_ = NULL,   zone_set_name_ = NULL )"},{"path":"https://metropolitan-council.github.io/streetlightR/reference/upload_zone_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload a polygon or line zone set — upload_zone_set","text":"login_email character, StreetLight login email key character, StreetLight API key. Default NULL. geom_type character, one \"polygon\" \"line\" zones GeoJSON feature collection sf object features either lines polygons columns include \"name\" \"geometry\". zone_set_name character, zone set name zones_ Deprecated. Use zones zone_set_name_ Deprecated. Use zone_set_name","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/upload_zone_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload a polygon or line zone set — upload_zone_set","text":"successful, list zone name, status, universally unique ID (uuid).","code":""},{"path":"https://metropolitan-council.github.io/streetlightR/reference/upload_zone_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload a polygon or line zone set — upload_zone_set","text":"","code":"if (FALSE) { library(sf) library(streetlightR) library(osmdata)  # create and upload an example polygon example_polygon <- sf::st_sfc(   sf::st_point(cbind(-93.09, 44.95)),   crs = 4326 ) %>%   sf::st_buffer(100)  upload_zone_set(   login_email = \"you@mail.com\",   geom_type = \"polygon\",   zones = example_polygon,   zone_set_name = paste0(\"example_polygon_\", Sys.time()) )  # create and upload an example polyline assign(   \"has_internet_via_proxy\",   TRUE,   environment(curl::has_internet) )  example_line <- osmdata::opq_osm_id(type = \"way\", id = 18278450) %>%   osmdata::opq_string() %>%   osmdata::osmdata_sf() %>%   .$osm_lines  upload_zone_set(   login_email = \"you@mail.com\",   geom_type = \"line\",   zones = example_line,   zone_set_name = paste0(\"example_polyline_\", Sys.time()) ) }"},{"path":"https://metropolitan-council.github.io/streetlightR/news/index.html","id":"streetlightr-110","dir":"Changelog","previous_headings":"","what":"streetlightR 1.1.0","title":"streetlightR 1.1.0","text":"Added NEWS.md file track changes package.","code":""}]
